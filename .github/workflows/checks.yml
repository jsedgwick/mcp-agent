name: Linting, formatting and other checks on codebase

on:
  workflow_call:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --frozen --all-extras --dev

      - name: Run ruff format check
        run: uv run scripts/format.py

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --frozen --all-extras --dev

      - name: Run pyright
        run: uv run scripts/lint.py

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: make sync
      - name: Run tests with coverage
        run: make coverage

  contract-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --frozen --all-extras --dev

      - name: Start Inspector test server
        run: |
          # Create a minimal test script to start the inspector
          cat > test_inspector_server.py << 'EOF'
          import time
          from mcp_agent.inspector import mount
          
          # Start inspector in standalone mode
          mount(app=None, port=7800)
          
          # Keep the server running
          try:
              while True:
                  time.sleep(1)
          except KeyboardInterrupt:
              pass
          EOF
          
          # Start the server in the background
          uv run python test_inspector_server.py &
          INSPECTOR_PID=$!
          
          # Wait for server to be ready
          for i in {1..10}; do
            if curl -s http://localhost:7800/_inspector/health > /dev/null; then
              echo "Inspector server is ready"
              break
            fi
            echo "Waiting for Inspector server to start..."
            sleep 1
          done

      - name: Run contract tests
        run: uv run schemathesis run docs/inspector/openapi.yaml --url http://localhost:7800/_inspector --checks all --workers auto

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: packages/inspector_ui/pnpm-lock.yaml

      - name: Install frontend dependencies
        working-directory: packages/inspector_ui
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript check
        working-directory: packages/inspector_ui
        run: pnpm run build

      - name: Run ESLint
        working-directory: packages/inspector_ui
        run: pnpm run lint

      - name: Check if UI builds successfully
        working-directory: packages/inspector_ui
        run: |
          # Build should have already run in TypeScript check
          # Just verify the dist directory exists and has content
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Error: dist/index.html not found"
            exit 1
          fi
          echo "Frontend build successful!"

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install Python dependencies
        run: uv sync --frozen --all-extras --dev

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: packages/inspector_ui/pnpm-lock.yaml

      - name: Install frontend dependencies
        working-directory: packages/inspector_ui
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: packages/inspector_ui
        run: pnpm run build

      - name: Install Playwright browsers
        working-directory: packages/inspector_ui
        run: pnpm exec playwright install --with-deps chromium

      - name: Run E2E tests
        working-directory: packages/inspector_ui
        run: pnpm exec playwright test
